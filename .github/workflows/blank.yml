# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      server_ip_value:
        description: 'ip of server'
        required: true
        default: 'localhost'
        type: string
      server_port_value:
        description: ' port of server'
        required: true
        default: ''
        type: string
      mcbot_method_value:
        description: 'method of nullping'
        required: true
        default: '24'
        type: string
      seconds:
        description: 'seconds for nullping'
        required: true
        default: '200'
        type: string
      threads:
        description: 'threads for nullping'
        required: true
        default: '-1'
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          java -jar nullping.jar ${{ github.event.inputs.server_ip_value }} ${{ github.event.inputs.server_port_value }} ${{ github.event.inputs.threads}} 2500 ${{ github.event.inputs.seconds}} ${{ github.event.inputs.method_value }}
    env:
      port: ${{ github.event.inputs.server_port_value }}
      SERVER_IP_TEST: ${{ github.event.inputs.server_ip_value }}
      METHOD_VALUE: ${{ github.event.inputs.method_value }}
      seconds: ${{ github.event.inputs.seconds}}
      threads: ${{ github.event.inputs.threads}}
